<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.boot.security.server.dao.EdiWzDeviceMapper">
  <resultMap id="BaseResultMap" type="com.boot.security.server.model.EdiWzDevice">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="deviceId" jdbcType="VARCHAR" property="deviceid" />
    <result column="deviceType" jdbcType="VARCHAR" property="devicetype" />
    <result column="source" jdbcType="VARCHAR" property="source" />
    <result column="registerInfo" jdbcType="VARCHAR" property="registerinfo" />
    <result column="type" jdbcType="VARCHAR" property="type" />
  </resultMap>
  <sql id="Base_Column_List">
    id, status, deviceId, deviceType, source, registerInfo, type
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from edi_wz_device
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from edi_wz_device
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.boot.security.server.model.EdiWzDevice">
    insert into edi_wz_device (id, status, deviceId, 
      deviceType, source, registerInfo, 
      type)
    values (#{id,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{deviceid,jdbcType=VARCHAR}, 
      #{devicetype,jdbcType=VARCHAR}, #{source,jdbcType=VARCHAR}, #{registerinfo,jdbcType=VARCHAR}, 
      #{type,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.boot.security.server.model.EdiWzDevice">
    insert into edi_wz_device
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="deviceid != null">
        deviceId,
      </if>
      <if test="devicetype != null">
        deviceType,
      </if>
      <if test="source != null">
        source,
      </if>
      <if test="registerinfo != null">
        registerInfo,
      </if>
      <if test="type != null">
        type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="deviceid != null">
        #{deviceid,jdbcType=VARCHAR},
      </if>
      <if test="devicetype != null">
        #{devicetype,jdbcType=VARCHAR},
      </if>
      <if test="source != null">
        #{source,jdbcType=VARCHAR},
      </if>
      <if test="registerinfo != null">
        #{registerinfo,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.boot.security.server.model.EdiWzDevice">
    update edi_wz_device
    <set>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="deviceid != null">
        deviceId = #{deviceid,jdbcType=VARCHAR},
      </if>
      <if test="devicetype != null">
        deviceType = #{devicetype,jdbcType=VARCHAR},
      </if>
      <if test="source != null">
        source = #{source,jdbcType=VARCHAR},
      </if>
      <if test="registerinfo != null">
        registerInfo = #{registerinfo,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.boot.security.server.model.EdiWzDevice">
    update edi_wz_device
    set status = #{status,jdbcType=INTEGER},
      deviceId = #{deviceid,jdbcType=VARCHAR},
      deviceType = #{devicetype,jdbcType=VARCHAR},
      source = #{source,jdbcType=VARCHAR},
      registerInfo = #{registerinfo,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>